# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the data from the URL
url = "http://bit.ly/w-data"
data = pd.read_csv(url)

# Display the first few rows of the dataframe
print("Data loaded successfully. Here are the first few rows:")
print(data.head())

# Visualizing the data
plt.scatter(data['Hours'], data['Scores'])
plt.title('Hours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.show()

# Splitting the data into training and testing sets
X = data.iloc[:, :-1].values
y = data.iloc[:, 1].values
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Training the linear regression model
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# Making predictions
y_pred = regressor.predict(X_test)

# Comparing actual vs predicted
df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print("\nComparison of Actual vs Predicted:\n", df)

# Evaluating the model
print("\nMean Squared Error:", mean_squared_error(y_test, y_pred))

# Plotting the regression line
line = regressor.coef_*X + regressor.intercept_
plt.scatter(X, y)
plt.plot(X, line, color='red')
plt.title('Hours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.show()

# Predicting score for custom hours
hours = 9.25
custom_pred = regressor.predict([[hours]])
print("\nPredicted Score for {} hours of study: {:.2f}%".format(hours, custom_pred[0]))
